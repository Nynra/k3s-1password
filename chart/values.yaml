global:
  commonLabels: {}
  commonAnnotations: {}

  # Supported by EKS
  nodeSelector: {}
  tolerations: []
  topologySpreadConstraints: []
  affinity: {}

enabled: true
enableReflector: false
enableConnect: true
enableEksOperator: true

# Only used to create clustersecretstores
connectTokenSecretName: "onepassword-connect-token"

clusterStores:
  enabled: false
  stores: []
  # Example cluster vault
  # - name: "example-cluster-vault"
  #   # Defaults to true, set to false to disable
  #   enabled: true
  #   # Vaults in the cluster vault
  #   vaults:
  #     - name: "example-vault"
  #       priority: 1
  #     # More can be added, priority should be unique

# Helm values passed to the connect chart.
# First connect to pass the content of this block to the helm chart
# https://github.com/1Password/connect-helm-charts/blob/main/charts/connect/values.yaml
connect: 
  # Second because the chart expects the values to be in a connect block
  connect: 
    serviceType: ClusterIP
    replicas: 1

    commonLabels: {}
    serviceAnnotations: {}

    # The name of Kubernetes Secret containing the 1Password Connect credentials
    credentialsName: op-credentials

    # The key for the 1Password Connect Credentials stored in the credentials secret
    credentialsKey: 1password-credentials.json

    # Node selector stanza for the Connect pod
    # See: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
    nodeSelector: {}

    # Affinity rules for the Connect pod
    affinity: {}

    api:
      # Prometheus Service Monitor
      # ref: https://github.com/coreos/prometheus-operator
      serviceMonitor:
        # Create ServiceMonitor Resource for scraping metrics using PrometheusOperator
        enabled: false
        # Specify the interval at which metrics should be scraped
        interval: 30s
        # Define the path used by ServiceMonitor to scrape metrics
        path: "/metrics"
        # Define the HTTP URL parameters used by ServiceMonitor
        params: {}
        # Extra annotations for the ServiceMonitor
        annotations: {}

    # This section of values is for 1Password Operator Configuration
    operator: 
      create: false

# Helm values passed to the external-secrets chart.
# https://github.com/external-secrets/external-secrets/blob/main/deploy/charts/external-secrets/values.yaml
external-secrets:
  # Specifies whether an external secret operator deployment be created.
  # If set to false, the operator will not be deployed and only the CRDs will be installed.
  createOperator: true

  # Annotations and labels to add to the operator deployment.
  commonLabels: {}

  # Annotations and labels to add to Pod
  podAnnotations: {}
  podLabels: {}

  # If true, external-secrets will perform leader election between instances to ensure no more
  # than one instance of external-secrets operates at a time.
  leaderElect: false
  replicaCount: 1

  # Specifies the number of concurrent ExternalSecret Reconciles external-secret executes at
  # a time.
  concurrent: 1

  # If set, install and upgrade CRDs through helm chart.
  installCRDs: true
  crds:
    createClusterExternalSecret: true
    createClusterSecretStore: true
    createClusterGenerator: true
    createClusterPushSecret: true
    createPushSecret: true
    annotations: {}
    conversion:
      # -- Conversion is disabled by default as we stopped supporting v1alpha1.
      enabled: false

  # If set external secrets are only reconciled in the
  # provided namespace
  scopedNamespace: ""
  # Must be used with scopedNamespace. If true, create scoped RBAC roles under the scoped namespace
  # and implicitly disable cluster stores and cluster external secrets
  scopedRBAC: false
  # If true the OpenShift finalizer permissions will be added to RBAC
  openshiftFinalizers: false

  # if true, the operator will process cluster external secret. Else, it will ignore them.
  processClusterExternalSecret: true
  # if true, the operator will process cluster push secret. Else, it will ignore them.
  processClusterPushSecret: true
  # if true, the operator will process cluster store. Else, it will ignore them.
  processClusterStore: true
  # if true, the operator will process push secret. Else, it will ignore them.
  processPushSecret: true

  serviceMonitor:
    # -- Specifies whether to create a ServiceMonitor resource for collecting Prometheus metrics
    enabled: false
  grafanaDashboard:
    # If true creates a Grafana dashboard.
    enabled: false
    sidecarLabel: "grafana_dashboard"
    sidecarLabelValue: "true"

# Helm values passed to the reflector chart.
# https://github.com/emberstack/kubernetes-reflector/blob/main/src/helm/reflector/values.yaml
reflector: 
  replicaCount: 1
  cron:
    enabled: false
    schedule: "*/15 * * * *"
    activeDeadlineSeconds: 600
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  topologySpreadConstraints: []
  priorityClassName: ""
